import msqlite;
use CSqlite;
module Sqlite{

	var const @inst = mmrt(CSqlite);
	def Connect:$arg1
	{
		var $obj = @inst.Connect($arg1);
		if(typeof($obj) =="M_NUMBER")
		{
			return 0;
		}
		return $obj;
	}

	def Close:$arg1
	{
		@inst.Close($arg1);
	}

	def Execute:$arg1
	{
		return @inst.Execute($arg1);
	}

	def ExecuteNonQuery:$arg1,$arg2
	{
		return @inst.ExecuteNonQuery($arg1,$arg2);
	}

	def Busytimeout:$arg1,$arg2
	{
		return @inst.Busytimeout($arg1,$arg2);
	}

	def Changes:$arg1
	{
		return @inst.Changes($arg1);
	}

	def Errcode:$arg1
	{
		return @inst.Errcode($arg1);
	}

	def Errmsg:$arg1
	{
		return @inst.Errmsg($arg1);
	}

	def Lastinsertrowid:$arg1
	{
		return @inst.Lastinsertrowid($arg1);
	}	

	def Version:
	{
		return @inst.Version();
	}

	def Columnname:$arg1,$arg2
	{
		return @inst.Columnname($arg1,$arg2);
	}

	def Bindtext:$arg1,$arg2,$arg3
	{
		@inst.Bindtext($arg1,$arg2,$arg3);
	}

	def Bindnumber:$arg1,$arg2,$arg3
	{
		@inst.Bindnumber($arg1,$arg2,$arg3);
	}

	def Bindnull:$arg1,$arg2,$arg3
	{
		@inst.Bindnull($arg1,$arg2,$arg3);
	}

	def Prepare:$arg1,$arg2
	{
		return @inst.Prepare($arg1,$arg2);
	}

	def Columncount:$arg1
	{
		return @inst.Columncount($arg1);
	}	

	def Columntype:$arg1,$arg2
	{
		return @inst.Columntype($arg1,$arg2);
	}	

	def Finalize:$arg1
	{
		return @inst.Finalize($arg1);
	}	
	def Reset:$arg1
	{
		return @inst.Reset($arg1);
	}	
}