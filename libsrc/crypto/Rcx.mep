import MCryptography;
import String;
use CRC,String;
module Rcx
{
	var const @crcinst = mmrt(CRC),const @stringinst = mmrt(String); 
	def RC4Encryp:$arg1,$arg2
	{
		if(@stringinst.Length($arg2)!=16)
		{
			return -1;
		}
		return @crcinst.RC4Encryp($arg1,$arg2);
	}

	def  RC4Decryp:$arg1,$arg2
	{
		if(@stringinst.Length($arg2)!=16)
		{
			return -1;
		}
		return @crcinst.RC4Decryp($arg1,$arg2);
	}

	def  RC2Encryp:$arg1,$arg2
	{
		if(@stringinst.Length($arg2)!=16)
		{
			return -1;
		}
		return @crcinst.RC2Encryp($arg1,$arg2);
	}
	def  RC2Decryp:$arg1,$arg2
	{
		if(@stringinst.Length($arg2)!=16)
		{
			return -1;
		}
		return @crcinst.RC2Decryp($arg1,$arg2);
	}	
}


